@inproceedings{wang2013towards,
  title={Towards optimization-safe systems: Analyzing the impact of undefined behavior},
  author={Wang, Xi and Zeldovich, Nickolai and Kaashoek, M Frans and Solar-Lezama, Armando},
  booktitle={Proceedings of the Twenty-Fourth ACM Symposium on Operating Systems Principles},
  pages={260--275},
  year={2013},
  organization={ACM}
}

@inproceedings{capsicum-usability,
 author = {Watson, Robert N. M. and Anderson, Jonathan and Laurie, Ben and Kennaway, Kris},
 title = {Capsicum: Practical Capabilities for {UNIX}},
 booktitle = {Proceedings of the 19th USENIX Conference on Security},
 series = {USENIX Security '10},
 year = {2010},
 isbn = {888-7-6666-5555-4},
 location = {Washington, DC},
 pages = {3--3},
 numpages = {1},
 url = {http://dl.acm.org/citation.cfm?id=1929820.1929824},
 acmid = {1929824},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}

@inproceedings{memarian2016cdepths,
    title={Into the depths of {C}: elaborating the de facto standards},
  author={Memarian, Kayvan and Matthiesen, Justus and Lingard, James and Nienhuis, Kyndylan and Chisnall, David and Watson, Robert NM and Sewell, Peter},
  booktitle={ACM SIGPLAN Notices},
  volume={51},
  number={6},
  pages={1--15},
  year={2016},
  organization={ACM}
}

@misc{simon2018wygiwyc,
  title={What you get is what you {C}: Controlling side effects in mainstream {C} compilers},
  author={Simon, Laurent and Chisnall, David and Anderson, Ross},
  year={2018},
  publisher={EuroS\&P}
}

@techreport{cheri-v6,
  title={{Capability Hardware Enhanced RISC Instructions}: {CHERI Instruction-Set Architecture} (Version 6)},
  author={Robert N. M. Watson and Peter G. Neumann and Jonathan Woodruff and Michael Roe and Jonathan Anderson and John Baldwin and David Chisnall and Brooks Davis and Alexandre Joannou and Ben Laurie and Simon W. Moore and Steven J. Murdoch and Robert Norton and Stacey Son and Hongyan Xia},
  year={2017},
  month={April},
  institution={University of Cambridge Computer Laboratory},
  note={UCAM-CL-TR-907}
}

@techreport{cheri-prog-guide,
  title={{Capability Hardware Enhanced RISC Instructions}: {CHERI
  Programmer's Guide}},
  author={Robert N. M. Watson and David Chisnall and Brooks Davis and Wojciech Koszek and Simon W. Moore and Steven J. Murdoch and Peter G. Neumann and Jonathan Woodruff},
  year={2015},
  month={September},
  institution={University of Cambridge Computer Laboratory},
  note={UCAM-CL-TR-877}
}

@article{cheri-jni,
 author = {Chisnall, David and Davis, Brooks and Gudka, Khilan and Brazdil, David and Joannou, Alexandre and Woodruff, Jonathan and Markettos, A. Theodore and Maste, J. Edward and Norton, Robert and Son, Stacey and Roe, Michael and Moore, Simon W. and Neumann, Peter G. and Laurie, Ben and Watson, Robert N.M.},
 title = {{CHERI JNI}: Sinking the {Java} Security Model into the {C}},
 journal = {SIGOPS Oper. Syst. Rev.},
 issue_date = {June 2017},
 volume = {51},
 number = {2},
 month = apr,
 year = {2017},
 issn = {0163-5980},
 pages = {569--583},
 numpages = {15},
 url = {http://doi.acm.org/10.1145/3093315.3037725},
 doi = {10.1145/3093315.3037725},
 acmid = {3037725},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {architecture, capability systems, cheri, compartmentalization, compilers, hardware security, java, jni, language security, memory protection, sandboxing},
}

@inproceedings{cheri2015,
  author={Robert N. M. Watson and Jonathan Woodruff and Peter G. Neumann and Simon W. Moore and Jonathan Anderson and David Chisnall and Nirav Dave and Brooks Davis and Khilan Gudka and Ben Laurie and Steven J. Murdoch and Robert Norton and Michael Roe and Stacey Son and Munraj Vadera},
  booktitle={2015 IEEE Symposium on Security and Privacy},
  title={{CHERI}: A Hybrid Capability-System Architecture for Scalable Software Compartmentalization},
  year={2015},
  volume={},
  number={},
  pages={20-37},
  keywords={data protection;operating systems (computers);program compilers;reduced instruction set computing;software architecture;CHERI;hybrid capability-system architecture;software compartmentalization;RISC instruction-set architecture;LLVM compiler;operating system;capability-based memory protection;C-language TCB;hardware-software object-capability model;Registers;Security;Kernel;Reduced instruction set computing;Libraries;Hardware;CHERI processor;capability system;software compartmentalization;computer architecture;memory protection;object capabilities},
  doi={10.1109/SP.2015.9},
  ISSN={1081-6011},
  month={May},
}

@inproceedings{cheri-2019-abstract,
 author = {Davis, Brooks and Watson, Robert N. M. and Richardson, Alexander and Neumann, Peter G. and Moore, Simon W. and Baldwin, John and Chisnall, David and Clarke, James and Filardo, Nathaniel Wesley and Gudka, Khilan and Joannou, Alexandre and Laurie, Ben and Markettos, A. Theodore and Maste, J. Edward and Mazzinghi, Alfredo and Napierala, Edward Tomasz and Norton, Robert M. and Roe, Michael and Sewell, Peter and Son, Stacey and Woodruff, Jonathan},
 title = {{CheriABI}: Enforcing Valid Pointer Provenance and Minimizing Pointer Privilege in the {POSIX} {C} Run-time Environment},
 booktitle = {Proceedings of the Twenty-Fourth International Conference on Architectural Support for Programming Languages and Operating Systems},
 series = {ASPLOS '19},
 year = {2019},
 isbn = {978-1-4503-6240-5},
 location = {Providence, RI, USA},
 pages = {379--393},
 numpages = {15},
 url = {http://doi.acm.org/10.1145/3297858.3304042},
 doi = {10.1145/3297858.3304042},
 acmid = {3304042},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {cheri, hardware, operating systems, security},
}

@article{Dennis:1966:PSM,
 author = {Dennis, Jack B. and Van Horn, Earl C.},
 title = {Programming Semantics for Multiprogrammed Computations},
 journal = {Commun. ACM},
 issue_date = {March 1966},
 volume = {9},
 number = {3},
 month = mar,
 year = {1966},
 issn = {0001-0782},
 pages = {143--155},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/365230.365252},
 doi = {10.1145/365230.365252},
 acmid = {365252},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@techreport{bell-lapadula,
  title={Secure computer system: unified exposition and {Multics} interpretation},
  author={Bell, David Elliott and LaPadula, Leonard J},
  institution={{ESD/AFSC}},
  address={Hanscom AFB, Bedford MA 01731},
  year={1975},
  note={ESD-TR-75-306}
}

@article{hardbound-devietti,
 author = {Devietti, Joe and Blundell, Colin and Martin, Milo M. K. and Zdancewic, Steve},
 title = {Hardbound: Architectural Support for Spatial Safety of the {C} Programming Language},
 journal = {SIGOPS Oper. Syst. Rev.},
 issue_date = {March 2008},
 volume = {42},
 number = {2},
 month = mar,
 year = {2008},
 issn = {0163-5980},
 pages = {103--114},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1353535.1346295},
 doi = {10.1145/1353535.1346295},
 acmid = {1346295},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {C programming language, spatial memory safety},
}

@inproceedings{lowfat-kwon,
 author = {Kwon, Albert and Dhawan, Udit and Smith, Jonathan M. and Knight,Jr., Thomas F. and DeHon, Andre},
 title = {Low-fat Pointers: Compact Encoding and Efficient Gate-level Implementation of Fat Pointers for Spatial Safety and Capability-based Security},
 booktitle = {Proceedings of the 2013 ACM SIGSAC Conference on Computer \& Communications Security},
 series = {CCS '13},
 year = {2013},
 isbn = {978-1-4503-2477-9},
 location = {Berlin, Germany},
 pages = {721--732},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2508859.2516713},
 doi = {10.1145/2508859.2516713},
 acmid = {2516713},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {capabilities, fat pointer, memory safety, processor, security, spatial confinement},
}

@misc{nist-nvd-overflow-2018,
  title = {{NVD - Statistics}},
  author = {{National Institute of Standards and Technology Information Technology Laboratory}},
  year = {2019},
  howpublished = {[Online] \url{https://nvd.nist.gov/vuln/search/statistics?form_type=Advanced&results_type=statistics&query=overflow&search_type=all&pub_start_date=01%2F01%2F2018&pub_end_date=12%2F31%2F2018}},
  note = {Accessed: 2019-04-02},
  date = {2019-04-02}
}

@book{blandy-orendorff,
  title={Programming Rust},
  subtitle={Fast, Safe Systems Development},
  author={Blandy, Jim and Orendorff, Jason},
  year={2017},
  publisher={O'Reilly Media, Inc.}
}

@misc{rust-trpl-book,
  title = {{The Rust Programming Language}},
  author = {The {Rust Project Developers}},
  year = {2019},
  howpublished = {[Online] \url{https://doc.rust-lang.org/1.33.0/book/}},
  note = {Accessed: 2019-04-04},
  date = {2019-04-04}
}

@misc{rust-nomicon-safe-unsafe,
  title = {{Meet Safe and Unsafe}},
  author = {The {Rust Project Developers}},
  year = {2019},
  howpublished = {[Online] \url{https://doc.rust-lang.org/nomicon/meet-safe-and-unsafe.html}},
  note = {Accessed: 2019-04-10},
}

@misc{rust-nomicon-rc-leak,
  title = {{Leaking}},
  author = {The {Rust Project Developers}},
  year = {2019},
  howpublished = {[Online] \url{https://doc.rust-lang.org/nomicon/leaking.html}},
  note = {Accessed: 2019-04-29},
}

@misc{rust-advisory-repeat,
  title = {{Security advisory for the standard library}},
  author = {The {Rust Core Team}},
  year = {2018},
  howpublished = {[Online] \url{https://blog.rust-lang.org/2018/09/21/Security-advisory-for-std.html}},
  note = {Accessed: 2019-04-12},
  date = {2018-09-21}
}

@misc{rust-advisory-rustdoc,
  title = {{Security advisory for rustdoc}},
  author = {The {Rust Core Team}},
  year = {2018},
  howpublished = {[Online] \url{https://blog.rust-lang.org/2018/07/06/security-advisory-for-rustdoc.html}},
  note = {Accessed: 2019-04-25},
  date = {2018-07-06}
}

@misc{cve-repeat,
  title = {{CVE - CVE-2018-1000810}},
  year = {2018},
  howpublished = {Available from MITRE, CVE-ID CVE-2018-1000810},
  url = {https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-1000810},
  note = {Accessed: 2019-04-12},
  date = {2018-10-08}
}

@misc{cve-push,
  title = {{CVE - CVE-2018-1000657}},
  year = {2018},
  howpublished = {Available from MITRE, CVE-ID CVE-2018-1000657},
  url = {https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-1000657},
  note = {Accessed: 2019-04-12},
  date = {2018-08-20}
}

@misc{cve-rustdoc,
  title = {{CVE - CVE-2018-1000622}},
  year = {2018},
  howpublished = {Available from MITRE, CVE-ID CVE-2018-1000622},
  url = {https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-1000622},
  note = {Accessed: 2019-04-25},
  date = {2018-07-09}
}

@misc{rust-commit-reverse,
  title = {{\`{}core::iter\`{}: fix bug uncovered by arith-overflow.}},
  author = {Felix S Klock II},
  year = {2015},
  howpublished = {[Online; git commit] \url{https://github.com/pnkfelix/rust/commit/f0404c39f272868c1dedc7cda7b0b6dffcb5713d}},
  note = {Accessed: 2019-04-25},
  date = {2015-02-20}
}

@misc{rust-issue-push,
  title = {{seg fault pushing on either size of a VecDeque}},
  author = {Jesse Jones},
  year = {2017},
  howpublished = {[Online; Rust issue \#44800] \url{https://github.com/rust-lang/rust/issues/44800}},
  note = {Accessed: 2019-04-12},
  date = {2017-09-24}
}

@misc{rust-issue-deque-append,
  title = {{vec\_deque::Iter has unsound Debug implementation}},
  author = {Ralf Jung},
  year = {2018},
  howpublished = {[Online; Rust issue \#53566] \url{https://github.com/rust-lang/rust/issues/53566}},
  note = {Accessed: 2019-04-23},
  date = {2017-08-21}
}

@misc{rust-issue-vec-mut,
  title = {{\`{}std::vec::IntoIter::as\_mut\_slice\`{} borrows \`{}\&self\`{}, returns \`{}\&mut\`{} of contents}},
  author = {Christophe Biocca},
  year = {2017},
  howpublished = {[Online; Rust issue \#39465] \url{https://github.com/rust-lang/rust/issues/39465}},
  note = {Accessed: 2019-04-23},
  date = {2017-02-02}
}

@misc{rust-issue-match-borrow,
  title = {{Can mutate in match-arm using a closure}},
  author = {Ariel Ben-Yehuda},
  year = {2018},
  howpublished = {[Online; Rust issue \#27282] \url{https://github.com/rust-lang/rust/issues/27282}},
  note = {Accessed: 2019-04-23},
  date = {2018-07-24}
}

@misc{rust-pr-slice,
  title = {{std: Check for overflow in \`{}str::repeat\`{}}},
  author = {Alex Crichton},
  year = {2018},
  howpublished = {[Online; Rust pull request \#54399] \url{https://github.com/rust-lang/rust/pull/54399}},
  note = {Accessed: 2019-04-23},
  date = {2018-09-21}
}

@misc{rust-pr-binarysearch,
  title = {{Avoid bounds checking at slice::binary\_search}},
  author = {Arthur Silva},
  year = {2016},
  howpublished = {[Online; Rust pull request \#30917] \url{https://github.com/rust-lang/rust/pull/30917}},
  note = {Accessed: 2019-04-25},
  date = {2016-10-26}
}

@misc{rust-pr-slice-partialeq,
  title = {{Improve PartialEq for slices}},
  author = {Bj\"orn Steinbrink},
  year = {2015},
  howpublished = {[Online; Rust pull request \#26884] \url{https://github.com/rust-lang/rust/pull/26884}},
  note = {Accessed: 2019-04-25},
  date = {2015-07-14}
}

@misc{rust-pr-reverse,
  title = {{Implement arithmetic overflow changes}},
  author = {Felix S Klock II},
  year = {2015},
  howpublished = {[Online; Rust pull request \#22532] \url{https://github.com/rust-lang/rust/pull/22532#issuecomment-75168901}},
  note = {Accessed: 2019-04-25},
  date = {2015-02-20}
}

@misc{rust-rfc-isize,
  title = {{Rename \`{}int/uint\`{} to \`{}isize/usize\`{}}},
  author = {Richard Zhang and Aaron Turon and Niko Matsakis},
  year = {2015},
  howpublished = {[Online; Rust RFC \#544] \url{https://github.com/rust-lang/rfcs/blob/master/text/0544-rename-int-uint.md}},
  note = {Accessed: 2019-04-12},
  date = {2015-02-18}
}

@misc{rust-miri-intptrcast,
  title = {{Implement intptrcast model}},
  author = {Ralf Jung and Oliver Scherer},
  year = {2019},
  howpublished = {[Online; Rust \texttt{miri} issue \#224] \url{https://github.com/rust-lang/miri/issues/224}},
  note = {Accessed: 2019-04-22},
  date = {2019-03-08}
}

@misc{rust-crate-indexing,
  title = {{indexing}},
  author = {Ulrik Sverdrup},
  year = {2018},
  howpublished = {[Online; Rust crate] \url{https://docs.rs/indexing/0.3.2/indexing/}},
  note = {Accessed: 2019-04-25},
  date = {2018-11-25}
}

@misc{llvm-langref,
  title = {{LLVM Language Reference Manual---LLVM 9 documentation}},
  author = {{LLVM Project}},
  year = {2019},
  howpublished = {[Online] \url{https://llvm.org/docs/LangRef.html}},
  note = {Accessed: 2019-04-12},
  date = {2019-04-12}
}

@inproceedings{kang-intptrcast,
 author = {Kang, Jeehoon and Hur, Chung-Kil and Mansky, William and Garbuzov, Dmitri and Zdancewic, Steve and Vafeiadis, Viktor},
 title = {A Formal {C} Memory Model Supporting Integer-pointer Casts},
 booktitle = {Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '15},
 year = {2015},
 isbn = {978-1-4503-3468-6},
 location = {Portland, OR, USA},
 pages = {326--335},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2737924.2738005},
 doi = {10.1145/2737924.2738005},
 acmid = {2738005},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {C Memory Model, Compiler, Integer-Pointer Cast, Optimization, Verification},
}

@misc{droge-opt,
  title = {{Speeding up RGB to grayscale conversion in Rust by a factor of 2.2 – and various other multimedia related processing loops}},
  author = {Sebastian Dr\"oge},
  year = {2018},
  howpublished = {[Online] \url{https://coaxion.net/blog/2018/01/speeding-up-rgb-to-grayscale-conversion-in-rust-by-a-factor-of-2-2-and-various-other-multimedia-related-processing-loops/}},
  note = {Accessed: 2019-04-25},
  date = {2018-01-21}
}

@inproceedings{xi-pfenning-dependent,
 author = {Xi, Hongwei and Pfenning, Frank},
 title = {Eliminating Array Bound Checking Through Dependent Types},
 booktitle = {Proceedings of the ACM SIGPLAN 1998 Conference on Programming Language Design and Implementation},
 series = {PLDI '98},
 year = {1998},
 isbn = {0-89791-987-4},
 location = {Montreal, Quebec, Canada},
 pages = {249--257},
 numpages = {9},
 url = {http://doi.acm.org/10.1145/277650.277732},
 doi = {10.1145/277650.277732},
 acmid = {277732},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@mastersthesis{beingessner,
	title = {You can't spell trust without {Rust}},
	author = {Alexis Beingessner},
	school = {Carleton University, Ontario},
	year = {2015},
}

@article{blanco-astro,
  title={What can the programming language {Rust} do for astrophysics?},
  author={Blanco-Cuaresma, Sergi and Bolmont, Emeline},
  journal={Proceedings of the International Astronomical Union},
  volume={12},
  number={S325},
  pages={341--344},
  year={2016},
  publisher={Cambridge University Press}
}

@inproceedings{holk-gpu,
  title={{GPU} programming in {Rust}: Implementing high-level abstractions in a systems-level language},
  author={Holk, Eric and Pathirage, Milinda and Chauhan, Arun and Lumsdaine, Andrew and Matsakis, Nicholas D},
  booktitle={2013 IEEE International Symposium on Parallel \& Distributed Processing, Workshops and Phd Forum},
  pages={315--324},
  year={2013},
  organization={IEEE}
}

@inproceedings{lin-gc,
 author = {Lin, Yi and Blackburn, Stephen M. and Hosking, Antony L. and Norrish, Michael},
 title = {{Rust} As a Language for High Performance {GC} Implementation},
 booktitle = {Proceedings of the 2016 ACM SIGPLAN International Symposium on Memory Management},
 series = {ISMM 2016},
 year = {2016},
 isbn = {978-1-4503-4317-6},
 location = {Santa Barbara, CA, USA},
 pages = {89--98},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2926697.2926707},
 doi = {10.1145/2926697.2926707},
 acmid = {2926707},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Rust, garbage collection, memory management},
}

@misc{debian-benchmarksgame,
  title = {{The Computer Language Benchmarks Game}},
  author = {Brent Fulgham and Isaac Guoy and others},
  year = {2019},
  howpublished = {[Online] \url{https://benchmarksgame-team.pages.debian.net/benchmarksgame/}},
  note = {Accessed: 2019-04-25},
  date = {2019-04-23}
}

@inproceedings{szekeres-eternal-war,
author={L. {Szekeres} and M. {Payer} and T. {Wei} and D. {Song}},
booktitle={2013 IEEE Symposium on Security and Privacy},
title={{SoK}: Eternal War in Memory},
year={2013},
volume={},
number={},
pages={48-62},
keywords={program debugging;security of data;software reliability;storage management;SoK;computer security;memory corruption bugs;memory corruption attacks;protection techniques;protection mechanisms;Computer bugs;Safety;Security;Programming;Arrays;Aerospace electronics;Memory management},
doi={10.1109/SP.2013.13},
ISSN={1081-6011},
month={May},}

@inproceedings{lamowski-sandcrust,
 author = {Lamowski, Benjamin and Weinhold, Carsten and Lackorzynski, Adam and H\"{a}rtig, Hermann},
 title = {Sandcrust: Automatic Sandboxing of Unsafe Components in {Rust}},
 booktitle = {Proceedings of the 9th Workshop on Programming Languages and Operating Systems},
 series = {PLOS'17},
 year = {2017},
 isbn = {978-1-4503-5153-9},
 location = {Shanghai, China},
 pages = {51--57},
 numpages = {7},
 url = {http://doi.acm.org/10.1145/3144555.3144562},
 doi = {10.1145/3144555.3144562},
 acmid = {3144562},
 publisher = {ACM},
 address = {New York, NY, USA},
}
